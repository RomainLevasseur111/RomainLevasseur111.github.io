{"ast":null,"code":"var _jsxFileName = \"/home/student/div-01/my-portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // Ensure you import the CSS file\nimport ComputerComponent from \"./components/Computer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${isDarkMode ? \"dark\" : \"light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"computer\",\n      children: /*#__PURE__*/_jsxDEV(ComputerComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gauche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Droit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isDarkMode,\n        onChange: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ComputerComponent","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","toggleTheme","prevMode","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/home/student/div-01/my-portfolio/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // Ensure you import the CSS file\nimport ComputerComponent from \"./components/Computer\";\n\nfunction App() {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const toggleTheme = () => {\n        setIsDarkMode((prevMode) => !prevMode);\n    };\n\n    return (\n        <div className={`container ${isDarkMode ? \"dark\" : \"light\"}`}>\n            <span class=\"computer\">\n                <ComputerComponent />\n            </span>\n\n            <div className=\"left-panel\">\n                <h1>Gauche</h1>\n            </div>\n            <div className=\"right-panel\">\n                <h1>Droit</h1>\n            </div>\n            <label className=\"switch\">\n                <input\n                    type=\"checkbox\"\n                    checked={isDarkMode}\n                    onChange={toggleTheme}\n                />\n                <span className=\"slider\"></span>\n            </label>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,iBAAiB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtBD,aAAa,CAAEE,QAAQ,IAAK,CAACA,QAAQ,CAAC;EAC1C,CAAC;EAED,oBACIN,OAAA;IAAKO,SAAS,EAAE,aAAaJ,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAK,QAAA,gBACzDR,OAAA;MAAMS,KAAK,EAAC,UAAU;MAAAD,QAAA,eAClBR,OAAA,CAACF,iBAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAEPb,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBR,OAAA;QAAAQ,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACNb,OAAA;MAAKO,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBR,OAAA;QAAAQ,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNb,OAAA;MAAOO,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBR,OAAA;QACIc,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEZ,UAAW;QACpBa,QAAQ,EAAEX;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFb,OAAA;QAAMO,SAAS,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACX,EAAA,CA7BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}